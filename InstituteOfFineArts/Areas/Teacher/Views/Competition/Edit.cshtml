@using System.Security.Policy
@model InstituteOfFineArts.Areas.Teacher.Models.CompetitionViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
    <section class=" content">
        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm("Edit", "Competition", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="box box-info">
                        <div class="box-body">
                            <div class="form-horizontal">
                                <h4 style="text-align:center">Update Competition</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.CompetitionId)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CompetitionName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.CompetitionName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CompetitionName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @Type = "Date" } })
                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @Type = "Date" } })
                                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        <img id="previous" src="#" class="hidden img-thumbnail" alt="Alternate Text" style="width: 100px" />
                                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                        <div style="margin-top: 5px">
                                            <button type="button" id="upload_widget" class="btn btn-primary">Upload files</button>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">

                                        <textarea class="form-control" name="Decription" rows="4">@Model.Description</textarea>
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-success" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>

            <div class="col-md-6">
                <div class="box box-info">
                    <div class="box-body">
                        <h4 style="text-align:center">Invite teacher to mark</h4>
                        <div class="form-horizontal">
                            <div style="padding-bottom:10px; float:left;">
                                <input style="text-align:left;" id="search" type="text" name="name" value="" autocomplete="false" placeholder="Seach" />
                            </div>
                            <table class="table table-bordered table-hover dataTable" id="list-examiner">

                                @Html.Action("InviteExaminer", "Competition", new { competitionId = Model.CompetitionId })

                            </table>
                        </div>
                    </div>
                </div>

            </div>
                    </div>
</section>
@section Scripts {

    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>

    <script type="text/javascript">
        $("#search").autocomplete({
            source: function(request, response) {
                $.ajax({
                    url: '@Url.Action("GetTeachers", "Competition")',
                    data: {
                        keyword: $('#search').val() + "",
                    },
                    success: function(data) {
                        response($.map(data,
                            function(val, item) {
                                return {
                                    label: val.name,
                                    value: val.name,
                                    id: val.id
                                }
                            }))
                    }
                })
            },
            select: function(event, ui) {
//                $("#id").val(ui.item.rollNumber);
//                $("#Penalty").removeAttr('disabled');
                console.log(ui.item.id);
                $.ajax({
                    url: '@Url.Action("InviteExaminer", "Competition")',
                    data: {
                        accountId: ui.item.id,
                        competitionId: @Model.CompetitionId
            },
                    success: function (res) {
                        console.log(res);
                        if (res.length)
                            $("#list-examiner").html(res);
                    }

                })
            }
        });
        var myWidget = cloudinary.createUploadWidget({
                cloudName: 'hanv11',
                uploadPreset: 'bpmopgln'
            },
            (error, result) => {
                if (!error && result && result.event === "success") {
                    console.log('Done! Here is the image info: ', result.info);
                    var imgLink = result.info.secure_url;
                    document.querySelector("input[name='Image']").value = imgLink;
                    var imgPrevious = document.getElementById("previous");
                    imgPrevious.src = imgLink;
                    imgPrevious.classList.remove("hidden");
                }
            }
        );

        document.getElementById("upload_widget").addEventListener("click",
            function() {
                myWidget.open();
            },
            false);
        function remove (id) {
            var confirmation = confirm("Are you sure you want to remove the user?");
            if (confirmation) {
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("DeleteExaminer", "Competition")',
                    data: {
                        accountId: id,
                        competitionId: @Model.CompetitionId
                    },
                    success: function (res) {
                        if (res.length) {
                            $('#list-examiner').html(res);
                        }
                        alert('removed');
                    }

                })
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
